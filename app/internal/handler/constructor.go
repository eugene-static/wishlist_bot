package handler

import (
	"github.com/eugene-static/wishlist_bot/app/internal/bot"
	"github.com/eugene-static/wishlist_bot/app/lib/format"
)

const (
	buttonMyWishlist = "–ú–æ–π –≤–∏—à–ª–∏—Å—Ç"
	buttonFindUser   = "–ù–∞–π—Ç–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"
	buttonAdd        = "–î–æ–±–∞–≤–∏—Ç—å"
	buttonDelete     = "–£–¥–∞–ª–∏—Ç—å"
	buttonPassword   = "–ü–∞—Ä–æ–ª—å"
	buttonBack       = "–ù–∞–∑–∞–¥"
	buttonCancel     = "–û—Ç–º–µ–Ω–∞"
	buttonOK         = "–û–ö"
)

const admin = "@eugene_static"

const (
	actionAdd       = "/add"
	actionDelete    = "/delete"
	actionPassword  = "/password"
	actionShowUser  = "/show_user"
	actionShowMe    = "/show_me"
	actionBack      = "/back"
	messageStart    = "/start"
	messageAdd      = "/message_add"
	messageDelete   = "/message_delete"
	messageShowUser = "/message_show_user"
	messagePassword = "/message_password"
)

const (
	deleteAllWishes = "–£–¥–∞–ª–∏—Ç—å –≤—Å—ë"
	deletePassword  = "–£–¥–∞–ª–∏—Ç—å –ø–∞—Ä–æ–ª—å"
)

const (
	lvlEmpty = iota
	lvlStart
	lvlEmptyList
	lvlMe
	lvlUser
	lvlEdit
	lvlService
	lvlServiceExt
)

const (
	textGreetings = 100 + iota
	textAddWish
	textDeleteWish
	textEnterPassword
	textWrongPassword
	textNoSpace
	textEnterUsername
	textSuccess
	textWishList
	textNoWishes
	textUserNotFound
	textWrongRequest
	textDefaultMessage
	textError
)

const (
	errGetUser = iota
	errGetList
	errAddWish
	errDelWish
	errChangePass
)

func (h *Handle) Register() {
	h.mux.Handle(bot.DefaultMessage, h.message)
	h.mux.Handle(messageAdd, h.add(h.showMe))
	h.mux.Handle(messageDelete, h.delete(h.showMe))
	h.mux.Handle(messageShowUser, h.showUser)
	h.mux.Handle(messagePassword, h.password)
	h.mux.Handle(messageStart, h.start)
	h.mux.Handle(actionShowMe, h.showMe)
	h.mux.Handle(actionBack, h.callback(textGreetings, lvlStart, messageStart))
	h.mux.Handle(actionAdd, h.callback(textAddWish, lvlEdit, messageAdd))
	h.mux.Handle(actionDelete, h.callback(textDeleteWish, lvlEdit, messageDelete))
	h.mux.Handle(actionPassword, h.callback(textEnterPassword, lvlEdit, messagePassword))
	h.mux.Handle(actionShowUser, h.callback(textEnterUsername, lvlUser, messageShowUser))
}

func (h *Handle) SetConfig() {
	msg := bot.NewConfig(bot.ModeHTML)
	h.bot.Config.Set(lvlEmpty, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonMyWishlist, actionShowMe),
			bot.NewButton(buttonFindUser, actionShowUser)))
	h.bot.Config.Set(lvlStart, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonAdd, actionAdd),
			bot.NewButton(buttonDelete, actionDelete),
			bot.NewButton(buttonPassword, actionPassword),
		),
		bot.NewRow(
			bot.NewButton(buttonBack, actionBack),
		))
	h.bot.Config.Set(lvlMe, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonAdd, actionAdd),
			bot.NewButton(buttonPassword, actionPassword),
		),
		bot.NewRow(
			bot.NewButton(buttonBack, actionBack),
		))
	h.bot.Config.Set(lvlEmptyList, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonBack, actionBack)))
	h.bot.Config.Set(lvlUser, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonOK, actionShowMe)))
	h.bot.Config.Set(lvlService, msg)
	msg.ReplyMarkup = bot.NewMarkup(
		bot.NewRow(
			bot.NewButton(buttonCancel, actionShowMe)))
	h.bot.Config.Set(lvlEdit, msg)
	//
	h.bot.Config.SetReplyMessage(textGreetings, "–ò—Ç–∞–∫, —á–µ–º –∑–∞–π–º–µ–º—Å—è?")
	h.bot.Config.SetReplyMessage(textAddWish, "–í–≤–µ–¥–∏ –æ–ø–∏—Å–∞–Ω–∏–µ –∏/–∏–ª–∏ —Å—Å—ã–ª–∫—É –∏ –æ—Ç–ø—Ä–∞–≤—å –≤ —á–∞—Ç –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º:")
	h.bot.Config.SetReplyMessage(textDeleteWish, "–í–≤–µ–¥–∏ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª—ã –Ω–æ–º–µ—Ä–∞ –∂–µ–ª–∞–Ω–∏–π –∏–∑ —Å–ø–∏—Å–∫–∞, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n"+
		format.Format("1 3 10 6\n", format.Monotype)+
		"–ï—Å–ª–∏ —Ö–æ—á–µ—à—å —É–¥–∞–ª–∏—Ç—å –≤–µ—Å—å —Å–ø–∏—Å–æ–∫, –≤–≤–µ–¥–∏ "+format.Format(deleteAllWishes, format.Monotype))
	h.bot.Config.SetReplyMessage(textEnterPassword, "–ü–∞—Ä–æ–ª—å –Ω–µ–æ–±—Ö–æ–¥–∏–º –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –∫ —Ç–≤–æ–µ–º—É –≤–∏—à–ª–∏—Å—Ç—É –±—ã–ª –¥–æ—Å—Ç—É–ø —Ç–æ–ª—å–∫–æ —É —Ç–µ—Ö, –∫—Ç–æ –∑–Ω–∞–µ—Ç –ø–∞—Ä–æ–ª—å. "+
		"–ò–º —Ç—ã –º–æ–∂–µ—à—å –¥–µ–ª–∏—Ç—å—Å—è –ª–∏—á–Ω–æ —Å –∫–µ–º-—Ç–æ –∏–ª–∏ –∂–µ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å –≤ —Å–≤–æ–µ–º –ø—Ä–æ—Ñ–∏–ª–µ. "+
		"–ü–∞—Ä–æ–ª—å –º–æ–∂–µ—Ç –±—ã—Ç—å –≤ –ª—é–±–æ–π —Ñ–æ—Ä–º–µ, –Ω–æ –Ω–µ –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –ø—Ä–æ–±–µ–ª—ã. –ù–∞–ø—Ä–∏–º–µ—Ä:"+
		"üêà‚Äç‚¨õüí•üíΩ\n"+
		"–ß—Ç–æ–±—ã —Å–±—Ä–æ—Å–∏—Ç—å –ø–∞—Ä–æ–ª—å –∏ —Å–¥–µ–ª–∞—Ç—å –≤–∏—à–ª–∏—Å—Ç –æ–±—â–µ–¥–æ—Å—Ç—É–ø–Ω—ã–º, –≤–≤–µ–¥–∏:\n"+
		format.Format(deletePassword, format.Monotype))
	h.bot.Config.SetReplyMessage(textWrongPassword, "–ù–µ–≤–µ—Ä–Ω—ã–π –ø–∞—Ä–æ–ª—å. –ü–æ–∏—â–∏ –ø–∞—Ä–æ–ª—å –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ª–∏–±–æ –∂–µ –æ–±—Ä–∞—Ç–∏—Å—å –∫ –Ω–µ–º—É –ª–∏—á–Ω–æ")
	h.bot.Config.SetReplyMessage(textEnterUsername, "–í–≤–µ–¥–∏ —é–∑–µ—Ä–Ω–µ–π–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, —á–µ–π –≤–∏—à–ª–∏—Å—Ç —Ç—ã —Ö–æ—á–µ—à—å –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å. –Æ–∑–µ—Ä–Ω–µ–π–º –º–æ–∂–Ω–æ –Ω–∞–π—Ç–∏ –≤ –ø—Ä–æ—Ñ–∏–ª–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è.\n"+
		"–ï—Å–ª–∏ –≤–∏—à–ª–∏—Å—Ç –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∑–∞—â–∏—â—ë–Ω –ø–∞—Ä–æ–ª–µ–º, —Ç–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª –≤–≤–µ–¥–∏ –ø–∞—Ä–æ–ª—å. –ù–∞–ø—Ä–∏–º–µ—Ä:\n"+
		format.Format(admin+" –ø–∞—Ä–æ–ª—å", format.Monotype))
	h.bot.Config.SetReplyMessage(textSuccess, "–£—Å–ø–µ—à–Ω–æ")
	h.bot.Config.SetReplyMessage(textNoWishes, "–ó–¥–µ—Å—å –Ω–µ—Ç –Ω–∏ –æ–¥–Ω–æ–≥–æ –∂–µ–ª–∞–Ω–∏—è...")
	h.bot.Config.SetReplyMessage(textUserNotFound, "–ü–æ—Ö–æ–∂–µ, —É —ç—Ç–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ—Ç –≤–∏—à–ª–∏—Å—Ç–∞")
	h.bot.Config.SetReplyMessage(textWrongRequest, "–í –∑–∞–ø—Ä–æ—Å–µ –æ—à–∏–±–∫–∞, –ø–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞")
	h.bot.Config.SetReplyMessage(textNoSpace, "–í –ø–∞—Ä–æ–ª–µ –Ω–µ –¥–æ–ª–∂–Ω–æ —Å–æ–¥–µ—Ä–∂–∞—Ç—å—Å—è –ø—Ä–æ–±–µ–ª–æ–≤. –ü–æ–ø—Ä–æ–±—É–π –¥—Ä—É–≥–æ–π")
	h.bot.Config.SetReplyMessage(textDefaultMessage, "–ù–µ –º–æ–≥—É –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ")
}

func (h *Handle) SetErrors() {
	h.log.Set(errGetUser, "getting user error")
	h.log.Set(errGetList, "getting list error")
	h.log.Set(errAddWish, "adding wish error")
	h.log.Set(errDelWish, "deleting wish error")
	h.log.Set(errChangePass, "changing password error")
}
